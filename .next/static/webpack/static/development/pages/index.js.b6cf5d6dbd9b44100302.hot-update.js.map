{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b6cf5d6dbd9b44100302.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport LeftPanel from '../components/leftPanel';\r\nimport ActiveActivities from '../components/activeActivities'\r\nimport fetch from 'isomorphic-unfetch';\r\nexport default class Index extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.nextActivities=[];\r\n        this.active=[]\r\n        this.day={\r\n\r\n        }\r\n        this.timeout=null;\r\n    }\r\n    orderActivities(day){\r\n        let activities=[];\r\n        const length=day.activities.length;\r\n        for (let i = 0; i < length;i++){\r\n            let minI = 0;\r\n            let minStartTime = day.activities[0].startTime;\r\n            let minFinishTime = day.activities[0].finishTime;\r\n            for (let j = 1; j < day.activities.length; j++) {\r\n                if (day.activities[j].startTime<minStartTime) {\r\n                    minI=j;\r\n                    minStartTime = day.activities[j].startTime;\r\n                    minFinishTime = day.activities[j].finishTime;\r\n                } else if (day.activities[j].startTime == minStartTime && day.activities[j].finishTime < minFinishTime){\r\n                     minI = j;\r\n                     minStartTime = day.activities[j].startTime;\r\n                     minFinishTime = day.activities[j].finishTime;\r\n                }\r\n            }\r\n            activities.push(day.activities[minI]);\r\n            day.activities.splice(minI,1);\r\n        }\r\n        return activities;\r\n    }\r\n    getNext(activities){\r\n        let next= [];\r\n        let date = new Date();\r\n        activities.map((activity)=>{\r\n            let splitStartDate = activity.startTime.split(':');\r\n            let startHour = parseInt(splitStartDate[0], 10);\r\n            if(startHour>date.getHours() && next.length<3){\r\n                next.push(activity)\r\n            }\r\n        })\r\n        this.nextActivities=next;\r\n        \r\n        let splitStartDate = this.next[0].startTime.split(':');\r\n        let startHour = parseInt(splitStartDate[0], 10);\r\n    }\r\n    setActive(){\r\n        let date = new Date();\r\n        this.props.day.activities.forEach(activity => {\r\n            let splitStartDate = activity.startTime.split(':');\r\n            let startHour = parseInt(splitStartDate[0], 10);\r\n            let splitFinishDate = activity.finishTime.split(':');\r\n            let finishHour = parseInt(splitFinishDate[0], 10);\r\n            activity.active = (startHour <= date.getHours() && (finishHour > date.getHours() || activity.finishTime === \"00:00\"));//set if active is good or bad\r\n        });\r\n        this.active = this.props.day.activities.filter(activity => activity.active == true);\r\n    }\r\n    static async getInitialProps() { //choose beetween production host or development host\r\n        let res = await fetch(`http://localhost:3000/day`);\r\n        const day = await res.json();\r\n        return {\r\n            day\r\n        }\r\n    }\r\n    render(){\r\n        this.props.day.activities = this.orderActivities(this.props.day);\r\n        this.setActive();\r\n        this.getNext(this.props.day.activities);\r\n        return(\r\n            <div className=\"container\">\r\n                <div style={{marginBottom:\"5vh\",textAlign:\"center\"}}>\r\n                    <h1 className=\"title is-1\">Schedule</h1>\r\n                </div> \r\n                <div className=\"columns\">\r\n                    <div className = \"column is-one-third\" >\r\n                        <LeftPanel activities={this.props.day.activities?this.props.day.activities:\"\"}></LeftPanel>\r\n                    </div>\r\n                    <div className = \"column is-two-thirds\">\r\n                        <ActiveActivities active={this.active} next={this.nextActivities}></ActiveActivities>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//<LeftPanel activities={this.props.day.activities?this.props.day.activities:\"\"}></LeftPanel>\r\n//                        <ActiveActivities active={this.active} next={this.nextActivities}></ActiveActivities>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAPA;AAQA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;;;;;;;;;;;;;AAzBA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;;AA/DA;AAwFA;AACA;AACA;AA1FA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}