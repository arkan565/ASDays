{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9cb03880bf3adff4b7cd.hot-update.js","sources":["webpack:///./components/activeActivitiesCard.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    PieChart,\r\n    Pie,\r\n    ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default class ActiveActivitiesCard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        this.interval = setInterval(() => this.setState({\r\n            time: Date.now()\r\n        }), 1000);\r\n    }\r\n    renderChart(){\r\n        if(this.props.activity.active){\r\n            let startHourSplit = this.props.activity.startTime.split(\":\");\r\n            let startHour = parseInt(startHourSplit[0]);\r\n            let finishHourSplit = this.props.activity.finishTime.split(\":\");\r\n            let finishHour = parseInt(finishHourSplit[0]);\r\n            let duration = (finishHour - startHour) * 3600;\r\n            let date = new Date();\r\n            let data = [{\r\n                    name: 'Passed time',\r\n                    value: (date.getHours()-startHour  ) * 3600 +date.getMinutes()*60+date.getSeconds() ,\r\n                    fill: 'rgb(255, 221, 87)'\r\n                },\r\n                {\r\n                    name: 'Remaining time',\r\n                    value: duration - ((date.getHours() - startHour) * 3600 + date.getMinutes() * 60 + date.getSeconds()),\r\n                    fill: 'grey'\r\n                },\r\n            ];\r\n            return (\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <PieChart>\r\n                        <Pie dataKey={data} startAngle={90} endAngle={-270} outerRadius=\"100%\" isAnimationActive={false}/>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            )\r\n        }else{\r\n            return(\r\n                <div> Start at {this.props.activity.startTime}</div>\r\n            )\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        \r\n        let imgStyle={\r\n            maxWidth:\"100%\",\r\n            maxHeight:\"70vh\",\r\n            margin:\"auto\",\r\n            width:\"auto\"\r\n        }\r\n        let cardStyle={\r\n            maxHeight:\"86vh\",\r\n            display:\"inline-block\",\r\n            width:\"100%\",\r\n            borderRadius:\"1%\",\r\n        }\r\n        let cardStyleActive = {\r\n            maxHeight: \"86vh\",\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n                borderRadius: \"1%\",\r\n                boxShadow: \"\",\r\n                border: \"solid rgb(255, 221, 87)\",\r\n                boxShadow: \"none\",\r\n        }\r\n        let textStyle = {\r\n            justifyContent:\"center\"\r\n        }\r\n        return (\r\n        <div className=\"column\">\r\n           <div  className=\"card\" style={this.props.activity.active?cardStyleActive:cardStyle}>\r\n                <header className=\"card-content\">\r\n                    <p className=\"card-header-title\" style={textStyle}>\r\n                        {this.props.activity.title}\r\n                    </p>\r\n                </header>\r\n                <div className=\"content\">\r\n                    {this.renderChart()}\r\n                </div>             \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AAEA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAMA;;;;AAlFA;AACA;;;;;A","sourceRoot":""}