{"version":3,"file":"static\\development\\pages\\editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/editor.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"bulma-calendar/dist/js/bulma-calendar.min.js\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\r\nimport bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min.js';\r\nimport 'bulma/css/bulma.css';\r\nimport 'bulma-calendar/dist/css/bulma-calendar.min.css';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst weekDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport default class Editor extends React.Component {\r\n    static async getInitialProps() { //choose beetween production host or development host\r\n        let res = await fetch(`http://localhost:3000/config`);\r\n        const config = await res.json();\r\n        return {\r\n            config\r\n        }\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date:\"\"}\r\n        this.type=\"\";\r\n        this.message=[];\r\n        this.date=\"default\";\r\n        this.activities=[];\r\n        this.edit=false;\r\n        this.changeType=this.changeType.bind(this);\r\n        this.changeDate = this.changeDate.bind(this);\r\n        this.fetchDate=this.fetchDate.bind(this);\r\n        this.addActivity=this.addActivity.bind(this);\r\n        this.changeTitle=this.changeTitle.bind(this);\r\n        this.save=this.save.bind(this);\r\n        this.calendars = null;\r\n    }\r\n    componentDidMount(){\r\n        this.calendars = bulmaCalendar.attach('[type=\"date\"]');\r\n    }\r\n    typeSwitch(){\r\n        switch(this.type){\r\n            case \"weekDay\":\r\n                if(weekDays.filter(day=>day==this.date).length<=0){\r\n                    this.date=weekDays[0];\r\n                }\r\n                return(\r\n                    <div className=\"select\">\r\n                        <select name=\"type\" id=\"type\" onChange={this.changeDate}>\r\n                            {weekDays.map((day,index)=>{\r\n                                return(<option key={index} value={`${day}`}>{day}</option>);\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                )\r\n            case \"Date\":\r\n                return(\r\n                    <div style={{display:\"inline-block\"}}>\r\n                        <input className=\"input\" type=\"date\" name=\"date\" id=\"date\" value={this.date} onChange={this.changeDate}/>\r\n                    </div>\r\n                )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    save(){\r\n        fetch(`http://localhost:3000/editor/${this.date}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                activities:this.activities,\r\n                date:this.date\r\n            })\r\n        }).then(res=>{\r\n            res.json().then(\r\n                res=>{\r\n                    this.message.splice(0, 0,res.message);\r\n                    this.setState({date:new Date()})\r\n                    setTimeout(()=>{\r\n                        this.message.pop();\r\n                        this.setState({\r\n                            date: new Date()\r\n                        })\r\n                    },2000)\r\n                }\r\n            )\r\n        })\r\n    }\r\n  \r\n    changeType(event){\r\n        this.type = event.target.value;\r\n        if(this.type==\"default\"){\r\n            this.changeDate(event)\r\n        }\r\n        this.setState({type:event.target.value});\r\n    }   \r\n    changeDate(event){\r\n        this.date=event.target.value;\r\n        this.activities=[];\r\n        this.edit=false;\r\n        this.setState({\r\n            date: this.date\r\n        })\r\n    }\r\n    fetchDate(){\r\n        fetch(`http://localhost:3000/editor/${this.date}`)\r\n        .then(res => {\r\n            res.json()\r\n            .then(res => {\r\n                this.activities = res.activities;\r\n                this.edit=true;\r\n                this.setState({\r\n                    date: this.date\r\n                })\r\n            })\r\n        });\r\n        \r\n    }\r\n    changeTitle(index, event) {\r\n        this.activities[index].title = event.target.value;\r\n        this.setState({\r\n            date: new Date()\r\n        })\r\n    }\r\n    changeTime(index,event){\r\n        let splitDate;\r\n        switch(event.target.attributes[\"name\"].value){\r\n            case \"startHour\":\r\n                splitDate = this.activities[index].startTime.split(\":\")\r\n                splitDate[0]=event.target.value;\r\n                this.activities[index].startTime = splitDate.join(\":\")\r\n                break;\r\n            case \"startMinute\":\r\n                splitDate = this.activities[index].startTime.split(\":\")\r\n                splitDate[1] = event.target.value;\r\n                this.activities[index].startTime = splitDate.join(\":\")\r\n                break;\r\n            case \"finishHour\":\r\n                splitDate = this.activities[index].finishTime.split(\":\")\r\n                splitDate[0] = event.target.value;\r\n                this.activities[index].finishTime = splitDate.join(\":\")\r\n                break;\r\n            case \"finishMinute\":\r\n                splitDate = this.activities[index].finishTime.split(\":\")\r\n                splitDate[1] = event.target.value;\r\n                this.activities[index].finishTime=splitDate.join(\":\")\r\n                break;\r\n        }\r\n        this.setState({\r\n            date: event.target.value\r\n        })\r\n    }\r\n    addActivity(){\r\n        this.activities.push({title:\"title\",startTime:\"00:00\",finishTime:\"00:00\"});\r\n        this.setState({\r\n            date: new Date()\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        var switchRender = this.typeSwitch();\r\n        return(\r\n            <div className=\"container\">\r\n                <div style={{position:\"absolute\",right:\"0\",display:\"inline-block\",maxWidth:\"50%\"}}>\r\n                   {this.message.map((message,index)=>{\r\n                        return(\r\n                            <div key={index} style={{zIndex:\"100\"}} className=\"notification is-primary\">\r\n                                {message}\r\n                            </div>\r\n                        )\r\n                   })}\r\n                   \r\n                </div>\r\n                <div className=\"select\">\r\n                    <select className=\"select is-info\" name=\"type\" id=\"type\" onChange={this.changeType}>\r\n                        <option value=\"default\">Default</option>\r\n                        <option value=\"weekDay\">Week Day</option>\r\n                        <option value=\"Date\">Date</option>\r\n                    </select>\r\n                </div>\r\n                {this.typeSwitch()}\r\n                <a className=\"button is-info\" onClick={this.fetchDate}>\r\n                Edit\r\n                </a>\r\n                <br/>\r\n                {this.activities.map((activity,index)=>{\r\n                    let splitStartDate = activity.startTime.split(':');\r\n                    let splitFinishDate = activity.finishTime.split(':');\r\n                    return(\r\n                        <div key={index} className=\"card\" style={{display:\"inline-block\",margin:\"10px\"}} >\r\n                        title:<br/>\r\n                        <div style={{display:\"inline-block\"}}><input className=\"input\" type=\"text\" value={activity.title} onChange={(e)=>this.changeTitle(index,e)}/></div><br/>\r\n                        start time:<br/>\r\n                        <div style={{display:\"inline-block\"}}><input className=\"input\" type=\"number\" min=\"00\" max=\"23\" name=\"startHour\" value={splitStartDate[0]} onChange={(e)=>this.changeTime(index,e)}/></div> \r\n                        : \r\n                        <div style={{display:\"inline-block\"}}><input className=\"input\" type=\"number\" min=\"00\" max=\"59\" gap=\"1\" name=\"startMinute\" value={splitStartDate[1]}  onChange={(e)=>this.changeTime(index,e)}/></div><br/>\r\n                        finish time:<br></br>\r\n                        <div style={{display:\"inline-block\"}}><input className=\"input\" type=\"number\" min=\"00\" max=\"23\" name=\"finishHour\" value={splitFinishDate[0]} onChange={(e)=>this.changeTime(index,e)}/></div>\r\n                        : \r\n                        <div style={{display:\"inline-block\"}}><input className=\"input\" type=\"number\" min=\"00\" max=\"59\" gap=\"1\" name=\"finishMinute\" value={splitFinishDate[1]}  onChange={(e)=>this.changeTime(index,e)}/></div><br/>\r\n                        <br/>\r\n                        <button onClick={()=>{this.activities.splice(index,1);this.setState({date:new Date()})}} className=\"button is-danger\">Delete</button>                        \r\n                        </div>)\r\n                    })}\r\n                    {this.edit?<div><a className=\"button is-info\" onClick={this.addActivity}>Add activity</a><a className=\"button is-success\" onClick={this.save}>Save</a></div>:\"\"}\r\n            </div>\r\n        )\r\n    }\r\n}","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"bulma-calendar/dist/js/bulma-calendar.min.js\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"react\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAeA;AACA;;;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAtBA;AAwBA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AACA;AADA;AAGA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtMA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}