{"version":3,"file":"static\\development\\pages\\configPanel.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/configPanel.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\r\n'next/link'\r\nimport 'bulma/css/bulma.css';\r\nimport fetch from 'isomorphic-unfetch';\r\nexport default class Config extends React.Component {\r\n    static async getInitialProps() { //choose beetween production host or development host\r\n        let res = await fetch(`http://localhost:3000/config`);\r\n        const config = await res.json();\r\n        return {\r\n            config\r\n        }\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.format=this.props.config.format;\r\n        this.form={\r\n            startTime:this.props.config.startTime,\r\n            finishTime:this.props.config.finishTime\r\n        }\r\n        this.message=[];\r\n        this.changeStartHourValue = this.changeStartHourValue.bind(this);\r\n        this.changeFinishHourValue = this.changeFinishHourValue.bind(this);\r\n        this.save=this.save.bind(this);\r\n    }\r\n    \r\n    changeStartHourValue(event){\r\n        if(this.format==\"24\"){\r\n           this.form.startTime.value=event.target.value;\r\n            if(this.form.startTime.value>=12){\r\n                this.form.startTime.midTime=\"pm\";\r\n                this.form.startTime.startHour=`${parseInt(this.form.startTime.value)-12}`;\r\n            }else{\r\n                this.form.startTime.midTime = \"am\";\r\n                this.form.startTime.startHour = `${this.form.startTime.value}`;\r\n            }\r\n        }else{\r\n            if(event.target.value==\"am\" || event.target.value==\"pm\"){\r\n                this.form.startTime.midTime = event.target.value;\r\n            }else{\r\n                this.form.startTime.startHour=event.target.value;\r\n            }\r\n            if(this.form.startTime.midTime==\"am\"){\r\n                this.form.startTime.value =`${this.form.startTime.startHour}`;\r\n            }else{\r\n                this.form.startTime.value = `${parseInt(this.form.startTime.startHour)+12}`;\r\n            }\r\n        }\r\n        this.setState({ date: new Date() });\r\n    }\r\n    changeFinishHourValue(event){\r\n        if (this.format == \"24\") {\r\n            this.form.finishTime.value = event.target.value;\r\n            if (this.form.finishTime.value >= 12) {\r\n                this.form.finishTime.midTime = \"pm\";\r\n                this.form.finishTime.finishHour = `${parseInt(this.form.finishTime.value) - 12}`;\r\n            } else {\r\n                this.form.finishTime.midTime = \"am\";\r\n                this.form.finishTime.finishHour = `${this.form.finishTime.value}`;\r\n            }\r\n        } else {\r\n            if (event.target.value == \"am\" || event.target.value == \"pm\") {\r\n                this.form.finishTime.midTime = event.target.value;\r\n            } else {\r\n                this.form.finishTime.finishHour = event.target.value;\r\n            }\r\n            if (this.form.finishTime.midTime == \"am\") {\r\n                this.form.finishTime.value = `${this.form.finishTime.finishHour}`;\r\n            } else {\r\n                this.form.finishTime.value = `${parseInt(this.form.finishTime.finishHour)+12}`;\r\n            }\r\n        }\r\n        this.setState({date:new Date()});\r\n    }\r\n    renderStartForm(){\r\n        if(this.format==\"24\"){\r\n            return (    \r\n                <div style={{ display: \"inline-block\" }}>\r\n                Start hour: <input className=\"input\" type=\"number\" min=\"0\" max=\"24\" value={this.form.startTime.value} onChange={this.changeStartHourValue} />\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div style={{ display: \"inline-block\" }}>\r\n                    Start hour:<br/>\r\n                    <div  style={{ display: \"inline-block\" }}>\r\n                        <input className=\"input\" value={this.form.startTime.startHour} type=\"number\" min=\"0\" max=\"11\" onChange={this.changeStartHourValue} />\r\n                    </div>\r\n                    <div className=\"select\">\r\n                        <select value={this.form.startTime.midTime} onChange={this.changeStartHourValue}>\r\n                            <option value=\"am\">am</option>\r\n                            <option value=\"pm\">pm</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    save(){\r\n         fetch(`http://localhost:3000/config`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Accept': 'application/json',\r\n                 'Content-Type': 'application/json',\r\n             },\r\n             body: JSON.stringify({\r\n                format: this.format,\r\n                startTime:this.form.startTime,\r\n                finishTime:this.form.finishTime                \r\n             })\r\n         }).then(res => {\r\n             res.json().then(\r\n                 res => {\r\n                     this.message.splice(0, 0, res.message);\r\n                     this.setState({\r\n                         date: new Date()\r\n                     })\r\n                     setTimeout(() => {\r\n                         this.message.pop();\r\n                         this.setState({\r\n                             date: new Date()\r\n                         })\r\n                     }, 2000)\r\n                 }\r\n             )\r\n         })\r\n    }\r\n    renderFinishForm(){\r\n         if(this.format==\"24\"){\r\n            return (\r\n                <div style={{ display: \"inline-block\" }}>\r\n                Finish hour: <input className=\"input\" type=\"number\" min=\"0\" max=\"24\" value={this.form.finishTime.value} onChange={this.changeFinishHourValue} />\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div style={{ display: \"inline-block\" }}>\r\n                    Finish Hour:<br/>\r\n                    <div  style={{ display: \"inline-block\" }}>\r\n                        <input className=\"input\" value={this.form.finishTime.finishHour} type=\"number\" min=\"0\" max=\"11\" onChange={this.changeFinishHourValue} />\r\n                    </div>\r\n                    <div className=\"select\">\r\n                        <select value={this.form.finishTime.midTime}  onChange={this.changeFinishHourValue}>\r\n                            <option value=\"am\">am</option>\r\n                            <option value=\"pm\">pm</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div style={{position:\"absolute\",right:\"0\",display:\"inline-block\",maxWidth:\"50%\"}}>\r\n                   {this.message.map((message,index)=>{\r\n                        return(\r\n                            <div key={index} style={{zIndex:\"100\"}} className=\"notification is-primary\">\r\n                                {message}\r\n                            </div>\r\n                        )\r\n                   })}\r\n                </div>\r\n                format:<br/>\r\n                <div className=\"select\">\r\n                    <select value={this.format} onChange={(e)=>{this.format=e.target.value;this.setState({date:new Date()})}}>\r\n                        <option value=\"12\">12 hours</option>\r\n                        <option value=\"24\">24 hours</option>\r\n                    </select>\r\n                </div>\r\n                <br/>\r\n                {this.renderStartForm()}<br/>\r\n                {this.renderFinishForm()}<br/><br/>\r\n                <a className=\"button is-success\" onClick={this.save}>Save</a>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"react\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AANA;AAYA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAIA;;;;AA5KA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}