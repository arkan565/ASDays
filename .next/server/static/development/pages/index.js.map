{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/activeActivities.js","webpack:///./components/activeActivitiesCard.js","webpack:///./components/activitiesGrid.js","webpack:///./components/hoursPanel.js","webpack:///./components/leftPanel.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"moment\"","webpack:///external \"react\"","webpack:///external \"recharts\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\r\nimport ActiveActivitiesCard from './activeActivitiesCard';\r\nexport default class ActiveActivities extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"columns\">        \r\n                    {this.props.active.map((activeActivity,index)=>{\r\n                        return <ActiveActivitiesCard key={index} activity={activeActivity}/>\r\n                    })}               \r\n                </div>\r\n                <div className=\"columns\">\r\n                    {this.props.next.map((activeActivity,index)=>{\r\n                        return <ActiveActivitiesCard key={index} activity={activeActivity}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    PieChart,\r\n    Pie,\r\n    ResponsiveContainer\r\n} from 'recharts';\r\n\r\nexport default class ActiveActivitiesCard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    componentDidMount(){\r\n        this.interval = setInterval(() => this.setState({\r\n            time: Date.now()\r\n        }), 1000);\r\n    }\r\n    renderChart(){\r\n        if(this.props.activity.active){\r\n            let startHourSplit = this.props.activity.startTime.split(\":\");\r\n            let startHour = parseInt(startHourSplit[0]);\r\n            let finishHourSplit = this.props.activity.finishTime.split(\":\");\r\n            let finishHour = parseInt(finishHourSplit[0]);\r\n            let duration = (finishHour - startHour) * 3600;\r\n            let date = new Date();\r\n            let data = [{\r\n                    name: 'Passed time',\r\n                    value: (date.getHours()-startHour  ) * 3600 +date.getMinutes()*60+date.getSeconds() ,\r\n                    fill: 'rgb(255, 221, 87)'\r\n                },\r\n                {\r\n                    name: 'Remaining time',\r\n                    value: duration - ((date.getHours() - startHour) * 3600 + date.getMinutes() * 60 + date.getSeconds()),\r\n                    fill: 'grey'\r\n                },\r\n            ];\r\n            return (\r\n                <ResponsiveContainer width=\"100%\" height={200}>\r\n                    <PieChart>\r\n                        <Pie data={data} startAngle={90} endAngle={-270} outerRadius=\"100%\" isAnimationActive={false} dataKey=\"value\"/>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            )\r\n        }else{\r\n            return(\r\n                <div> Start at {this.props.activity.startTime}</div>\r\n            )\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        \r\n        let imgStyle={\r\n            maxWidth:\"100%\",\r\n            maxHeight:\"70vh\",\r\n            margin:\"auto\",\r\n            width:\"auto\"\r\n        }\r\n        let cardStyle={\r\n            maxHeight:\"86vh\",\r\n            display:\"inline-block\",\r\n            width:\"100%\",\r\n            borderRadius:\"1%\",\r\n        }\r\n        let cardStyleActive = {\r\n            maxHeight: \"86vh\",\r\n                display: \"inline-block\",\r\n                width: \"100%\",\r\n                borderRadius: \"1%\",\r\n                boxShadow: \"\",\r\n                border: \"solid rgb(255, 221, 87)\",\r\n                boxShadow: \"none\",\r\n        }\r\n        let textStyle = {\r\n            justifyContent:\"center\"\r\n        }\r\n        return (\r\n        <div className=\"column\">\r\n           <div  className=\"card\" style={this.props.activity.active?cardStyleActive:cardStyle}>\r\n                <header className=\"card-content\">\r\n                    <p className=\"card-header-title\" style={textStyle}>\r\n                        {this.props.activity.title}\r\n                    </p>\r\n                </header>\r\n                <div className=\"content\">\r\n                    {this.renderChart()}\r\n                </div>             \r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ActivitiesGrid extends React.Component {\r\n     constructor(props) {\r\n         super(props);\r\n         this.activitiesGridStyle = {\r\n             \"display\": \"grid\",\r\n             \"gridTemplateRows\": \"repeat(24,1fr)\",\r\n             \"height\":\"100%\",\r\n             \"border\":\"solid 1px #DADADA\"\r\n         }\r\n     }\r\n    renderActivities(){\r\n        try{\r\n            let activities=[]\r\n            return this.props.activities.map((activity,index) => {\r\n                let splitStartDate = activity.startTime.split(':'); \r\n                let startHour = parseInt(splitStartDate[0],10);\r\n                let startMinute = parseInt(splitStartDate[1], 10);\r\n                let splitFinishDate=activity.finishTime.split(':');\r\n                let finishHour = parseInt(splitFinishDate[0], 10);\r\n                let finishMinute = parseInt(splitFinishDate[1], 10);\r\n                let offset=1+startHour;\r\n                let duration = (finishHour-startHour);\r\n                if(finishHour==0){\r\n                    duration =  (24- startHour)\r\n                }\r\n                let style = {\r\n                    \"gridRowStart\": offset,\r\n                    \"gridRowEnd\": `span ${duration}`,\r\n                    \"backgroundColor\": \"#DCEDC8\"\r\n                };\r\n                if(activity.active){\r\n                    style.backgroundColor = \"#ffdd57\";\r\n                }\r\n                \r\n                \r\n                return(\r\n                    <div key={index} style={style}>{activity.title}</div>\r\n                )\r\n            })\r\n        }catch(ex){\r\n            return \"\";\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div style={this.activitiesGridStyle}>\r\n                {this.renderActivities()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nvar moment = require('moment');\r\nexport default class HoursPanel extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.hoursPanelStyle = {\r\n            \"display\": \"grid\",\r\n            \"gridTemplateRows\": \"repeat(24, 1fr)\"\r\n        }\r\n        this.hourDivStyle ={\r\n            border: \"solid\",\r\n            borderWidth:\"1px 0px 1px 1px\",\r\n            borderColor:\"#DADADA\",\r\n            textAlign: \"center\"\r\n\r\n        }\r\n    }\r\n    renderHours(){\r\n        let hours = []\r\n        for(var i=0;i<24;i++){\r\n            let date = new Date();\r\n            date.setHours(Math.trunc(i));\r\n            date.setMinutes(0);\r\n            hours.push(<div style={this.hourDivStyle} key={date}>{moment(date).format(\"HH:mm\")}</div>)\r\n        }    \r\n        return hours;\r\n    }\r\n    render(){\r\n\r\n        return(\r\n        <div style={this.hoursPanelStyle}>\r\n            {this.renderHours()}\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport HoursPanel from './hoursPanel'\r\nimport ActivitiesGrid from './activitiesGrid'\r\nexport default class LeftPanel  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"columns is-gapless is-mobile\">\r\n                <div className=\"column is-one-fifth\">\r\n                        <HoursPanel></HoursPanel>\r\n                </div>\r\n                <div id=\"activities\" className=\"column is-four-fifths\">\r\n                            <ActivitiesGrid activities={this.props.activities?this.props.activities:\"\"}></ActivitiesGrid>    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport 'bulma/css/bulma.css';\r\nimport LeftPanel from '../components/leftPanel';\r\nimport ActiveActivities from '../components/activeActivities'\r\nimport fetch from 'isomorphic-unfetch';\r\nexport default class Index extends React.Component{\r\n    static async getInitialProps() { //choose beetween production host or development host\r\n        let res = await fetch(`http://localhost:3000/day`);\r\n        const day = await res.json();\r\n        return {\r\n            day\r\n        }\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        this.nextActivities=[];\r\n        this.active=[]\r\n        this.day={\r\n\r\n        }\r\n        this.timeout=null;\r\n    }\r\n    orderActivities(day){\r\n        let activities=[];\r\n        const length=day.activities.length;\r\n        for (let i = 0; i < length;i++){\r\n            let minI = 0;\r\n            let minStartTime = day.activities[0].startTime;\r\n            let minFinishTime = day.activities[0].finishTime;\r\n            for (let j = 1; j < day.activities.length; j++) {\r\n                if (day.activities[j].startTime<minStartTime) {\r\n                    minI=j;\r\n                    minStartTime = day.activities[j].startTime;\r\n                    minFinishTime = day.activities[j].finishTime;\r\n                } else if (day.activities[j].startTime == minStartTime && day.activities[j].finishTime < minFinishTime){\r\n                     minI = j;\r\n                     minStartTime = day.activities[j].startTime;\r\n                     minFinishTime = day.activities[j].finishTime;\r\n                }\r\n            }\r\n            activities.push(day.activities[minI]);\r\n            day.activities.splice(minI,1);\r\n        }\r\n        return activities;\r\n    }\r\n    setActive() {\r\n        let date = new Date();\r\n        this.props.day.activities.forEach(activity => {\r\n            let splitStartDate = activity.startTime.split(':');\r\n            let startHour = parseInt(splitStartDate[0], 10);\r\n            let splitFinishDate = activity.finishTime.split(':');\r\n            let finishHour = parseInt(splitFinishDate[0], 10);\r\n            activity.active = (startHour <= date.getHours() && (finishHour > date.getHours() || activity.finishTime === \"00:00\")); //set if active is good or bad\r\n        });\r\n        this.active = this.props.day.activities.filter(activity => activity.active == true);\r\n    }\r\n    getNext(activities){\r\n        let next= [];\r\n        let date = new Date();\r\n        activities.map((activity)=>{\r\n            let splitStartDate = activity.startTime.split(':');\r\n            let startHour = parseInt(splitStartDate[0], 10);\r\n            if(startHour>date.getHours() && next.length<3){\r\n                next.push(activity)\r\n            }\r\n        })\r\n        this.nextActivities=next;\r\n    }\r\n    setTimeout(){\r\n        let minTime= -1;\r\n        let date = new Date();\r\n        for (let i = 0; i < this.active.length; i++) {\r\n            let activity=this.active[i];\r\n            let splitFinishDate = activity.finishTime.split(':');\r\n            let finishHour = parseInt(splitFinishDate[0], 10);\r\n            let finishMinutes = parseInt(splitFinishDate[1], 10);\r\n            let secondsLeft= 60-date.getSeconds()+1;\r\n            let minutes = (finishMinutes != 0 ? finishMinutes - date.getMinutes()-1 : 60 - date.getMinutes()-1);\r\n            let hours = (finishHour!=0?finishHour-date.getHours()-1:24-date.getHours()-1);\r\n            let timeleft = 3600*1000*hours+60*1000*minutes+secondsLeft*1000;\r\n            if(minTime==-1 || timeleft<minTime){\r\n                minTime=timeleft;\r\n            }\r\n        }\r\n        for(let i=0;i<this.nextActivities.length;i++){\r\n            let activity=this.nextActivities[i];\r\n            let splitStartDate = activity.startTime.split(':');\r\n            let startHour = parseInt(splitStartDate[0], 10);\r\n            let startMinute = parseInt(splitStartDate[1], 10);\r\n            let secondsLeft = 60 - date.getSeconds() + 1;\r\n            let minutes = (startMinute != 0 ? startMinute - date.getMinutes() - 1 : 60 - date.getMinutes() - 1);\r\n            let hours = (startHour != 0 ? startHour - date.getHours() - 1 : 24 - date.getHours() - 1);\r\n            let timeleft = 3600 * 1000 * hours + 60 * 1000 * minutes + secondsLeft * 1000;\r\n            if (minTime == -1 || timeleft < minTime) {\r\n                minTime = timeleft;\r\n            }\r\n        }\r\n        try {\r\n            clearTimeout(this.timeout)\r\n        } catch (ex) {\r\n\r\n        }\r\n        if(minTime!=-1){\r\n            this.timeout = setTimeout(() => this.setState({\r\n                time: Date.now()\r\n            }), minTime);\r\n        }\r\n        console.log(minTime)\r\n    }\r\n\r\n    render(){\r\n        this.props.day.activities = this.orderActivities(this.props.day);\r\n        this.setActive();\r\n        this.getNext(this.props.day.activities);\r\n        this.setTimeout();\r\n        return(\r\n            <div className=\"container\">\r\n                <div style={{marginBottom:\"5vh\",textAlign:\"center\"}}>\r\n                    <h1 className=\"title is-1\">Schedule</h1>\r\n                </div> \r\n                <div className=\"columns\">\r\n                    <div className = \"column is-one-third\" >\r\n                        <LeftPanel activities={this.props.day.activities?this.props.day.activities:\"\"}></LeftPanel>\r\n                    </div>\r\n                    <div className = \"column is-two-thirds\">\r\n                        <ActiveActivities active={this.active} next={this.nextActivities}></ActiveActivities>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//<LeftPanel activities={this.props.day.activities?this.props.day.activities:\"\"}></LeftPanel>\r\n//                        <ActiveActivities active={this.active} next={this.nextActivities}></ActiveActivities>","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"moment\");","module.exports = require(\"react\");","module.exports = require(\"recharts\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;;;;AAnBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AAEA;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAMA;;;;AAlFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAIA;;;;AAjDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAAA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AACA;AAEA;AACA;AAAA;AAIA;;;;AAhCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAKA;;;;AAhBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AADA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAPA;AAQA;AACA;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;;;;AA7HA;AAgIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}